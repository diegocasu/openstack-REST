---
swagger: "2.0"
info:
  description: "VMs manager at peak hours"
  version: "1.0.0"
  title: "Openstack VMs manager"
host: "172.16.3.42:8080"
basePath: "/v1"
tags:
- name: "images"
  description: "Images collection"
- name: "flavors"
  description: "Flavors collection"
- name: "networks"
  description: "Networks collection"
- name: "servers"
  description: "Servers collection"
- name: "schedules"
  description: "Schedules collection"
schemes:
- "http"
paths:
  /images:
    get:
      tags:
      - "images"
      summary: "Get images"
      description: "Get all images available in the system"
      operationId: "get_images"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "swagger_server.controllers.images_controller"
  /flavors:
    get:
      tags:
      - "flavors"
      summary: "Get flavors"
      description: "Get all flavors available in the system"
      operationId: "get_flavors"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "swagger_server.controllers.flavors_controller"
  /networks:
    get:
      tags:
      - "networks"
      summary: "Get networks"
      description: "Get all networks"
      operationId: "get_networks"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "swagger_server.controllers.networks_controller"
  /servers:
    get:
      tags:
      - "servers"
      summary: "Get servers"
      description: "Get all servers running in the system"
      operationId: "get_servers"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "swagger_server.controllers.servers_controller"
  /schedules:
    post:
      tags:
      - "schedules"
      summary: "Create a new schedule"
      description: ""
      operationId: "add_schedule"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Schedule data"
        required: true
        schema:
          $ref: "#/definitions/Schedule"
      responses:
        "201":
          description: "Created"
        "404":
          description: "Bad request"
      x-swagger-router-controller: "swagger_server.controllers.schedules_controller"
  /schedules/{scheduleId}:
    get:
      tags:
      - "schedules"
      summary: "Find schedule by ID"
      description: "Returns a single schedule"
      operationId: "get_schedule_by_id"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "scheduleId"
        in: "path"
        description: "ID of Schedule to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Schedule"
        "404":
          description: "Schedule not found"
      x-swagger-router-controller: "swagger_server.controllers.schedules_controller"
    delete:
      tags:
      - "schedules"
      summary: "Deletes a schedule"
      description: ""
      operationId: "delete_schedule"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "scheduleId"
        in: "path"
        description: "Schedule ID to delete"
        required: true
        type: "string"
      responses:
        "200":
          description: "Deleted"
        "404":
          description: "Schedule not found"
      x-swagger-router-controller: "swagger_server.controllers.schedules_controller"
definitions:
  Schedule:
    type: "object"
    required:
    - "peak"
    - "server"
    properties:
      peak:
        $ref: "#/definitions/Schedule_peak"
      server:
        type: "object"
        allOf:
        - $ref: "#/definitions/Server"
    xml:
      name: "Schedule"
    example:
      server: ""
      peak:
        start: "6:00"
        end: "7:00"
  Server:
    type: "object"
    required:
    - "count"
    - "flavor"
    - "image"
    - "network"
    properties:
      name:
        type: "string"
        example: "test"
      image:
        type: "string"
        example: "Cirros"
      flavor:
        type: "string"
        example: "basic"
      network:
        type: "string"
        example: "internal"
      count:
        type: "integer"
        format: "int64"
        example: 1
    xml:
      name: "Server"
  Schedule_peak:
    type: "object"
    required:
    - "end"
    - "start"
    properties:
      start:
        type: "string"
        example: "6:00"
      end:
        type: "string"
        example: "7:00"
    example:
      start: "6:00"
      end: "7:00"
