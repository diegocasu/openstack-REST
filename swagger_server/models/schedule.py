# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Schedule(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, peak_interval: object=None, server: object=None):  # noqa: E501
        """Schedule - a model defined in Swagger

        :param id: The id of this Schedule.  # noqa: E501
        :type id: str
        :param peak_interval: The peak_interval of this Schedule.  # noqa: E501
        :type peak_interval: object
        :param server: The server of this Schedule.  # noqa: E501
        :type server: object
        """
        self.swagger_types = {
            'id': str,
            'peak_interval': object,
            'server': object
        }

        self.attribute_map = {
            'id': 'id',
            'peak_interval': 'peak_interval',
            'server': 'server'
        }

        self._id = id
        self._peak_interval = peak_interval
        self._server = server

    @classmethod
    def from_dict(cls, dikt) -> 'Schedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Schedule of this Schedule.  # noqa: E501
        :rtype: Schedule
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Schedule.


        :return: The id of this Schedule.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Schedule.


        :param id: The id of this Schedule.
        :type id: str
        """

        self._id = id

    @property
    def peak_interval(self) -> object:
        """Gets the peak_interval of this Schedule.


        :return: The peak_interval of this Schedule.
        :rtype: object
        """
        return self._peak_interval

    @peak_interval.setter
    def peak_interval(self, peak_interval: object):
        """Sets the peak_interval of this Schedule.


        :param peak_interval: The peak_interval of this Schedule.
        :type peak_interval: object
        """
        if peak_interval is None:
            raise ValueError("Invalid value for `peak_interval`, must not be `None`")  # noqa: E501

        self._peak_interval = peak_interval

    @property
    def server(self) -> object:
        """Gets the server of this Schedule.


        :return: The server of this Schedule.
        :rtype: object
        """
        return self._server

    @server.setter
    def server(self, server: object):
        """Sets the server of this Schedule.


        :param server: The server of this Schedule.
        :type server: object
        """
        if server is None:
            raise ValueError("Invalid value for `server`, must not be `None`")  # noqa: E501

        self._server = server
